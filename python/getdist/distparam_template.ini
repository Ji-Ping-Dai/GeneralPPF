#Samlple parameter file for "GetDist" script (for processing .txt chain files from command line)

#if you are not using .paramnames file, use these lines so parameters named by number
nparam=

#Can set file_root here, or in GetDist command line as second parameter
file_root = chains/test
out_root = 
out_dir = 
#Set plot_data_dir if you want to pre-compute densities and output to files
#plot_data_dir = plot_data/

#If 0 assume 1 and no chain filename prefixes
chain_num = 
first_chain = 
exclude_chain = 

#If generated chain at higher temperature can cool for computing results
cool = 1

%%%ANALYSIS_DEFAULTS%%%

#set no_tests=T not to compute or output convergence statistics 
no_tests = F

#Default chain files have columns: weight, -log(like), param1, param2, ...
#samples_are_chains = F can be used if instead the first two columns not present (assumed to be 1 and 0)
samples_are_chains = T

#settings for output of plot files

#No plot files produced if no_plots = F
no_plots = T

plot_meanlikes = F
shade_meanlikes = F

#if we only want all 2D plots agains a particular given parameter name
plot_2D_param = 

#if above not set, instead plot just these combinations:
#if both zero it will plot most correlated variables
plot_2D_num = 0
plot1 = param1 param2
plot2 =

#number of sample scatter (3D) plots, colored by third parameter
#if last parameter is 0 or -1 colored by the parameter most correlated
#with one of the eigenvector directions (e.g. parallel or orthogonal to degeneracy)
num_3D_plots = 0
3D_plot1 = param1 param2 param3

#Output 2D plots for param combos with 1D marginalized plots along the diagonal
triangle_plot = T
#Uses all parameters unless triangle_params is set
triangle_params = 

#Parameters to use. If not specified use all parameters which have labels.
#plot_params = param1 param2 param3

#Output ND posteriors for selected parameters
dump_ND_bins = F
num_bins_ND = 10
ND_params = param1 param2 param3 param4


#If need to give limits on derived parameters if prior cuts off distribution where not very small
#For most parameters these are handled automatically from the input chain .ranges file
#limits[myparam]= 0 N

#compute two-tail marginalized limits irrespective of limits settings above and .ranges
#(otherwise limits are two-tail only if not near boundary)
force_twotail = F

#PCA - analysis output in file file_root.PCA
#number of parameter to do PCA for
PCA_num = 0
PCA_normparam = 1
#The parameters to use
PCA_params = 1 2 3
#L for log(x), M for log(-x), N for no log
PCA_func   = LLL

#if parameter_names empty set from file_root.paramnames if it exists
#otherwise set up labels manually in this file using lab1=... etc.
parameter_names = 
#params_generic.paramnames


